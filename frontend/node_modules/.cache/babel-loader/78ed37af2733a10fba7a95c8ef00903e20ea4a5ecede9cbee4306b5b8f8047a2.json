{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/workspace/react-practice/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from '../components/EventsList';\nimport { useLoaderData, json } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nconst loadEvents = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nexport const loader = async () => {};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","json","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loadEvents","response","fetch","ok","status","loader","$RefreshReg$"],"sources":["/home/pedro/Documents/workspace/react-practice/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from '../components/EventsList';\nimport { useLoaderData, json } from 'react-router-dom';\n\nconst EventsPage = () => {\n  const data = useLoaderData();\n\n  if(data.isError){\n    return <p>{data.message}</p>\n  }\n\n  const events = data.events;\n\n  return <EventsList events={events}/>\n}\n\nexport default EventsPage;\n\nconst loadEvents = async () =>{\n  const response = await fetch('http://localhost:8080/events');\n    \n  if (!response.ok) {       \n    return json({message:'Could not fetch events.'}, {status:500})\n  } else {\n    return response;\n  }\n}\n\nexport  const loader = async () => {\n\n}"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGN,aAAa,EAAE;EAE5B,IAAGM,IAAI,CAACC,OAAO,EAAC;IACd,oBAAOJ,OAAA;MAAAK,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAC9B;EAEA,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAE1B,oBAAOX,OAAA,CAACJ,UAAU;IAACe,MAAM,EAAEA;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AACtC,CAAC;AAAAR,EAAA,CAVKD,UAAU;EAAA,QACDJ,aAAa;AAAA;AAAAe,EAAA,GADtBX,UAAU;AAYhB,eAAeA,UAAU;AAEzB,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAW;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOlB,IAAI,CAAC;MAACQ,OAAO,EAAC;IAAyB,CAAC,EAAE;MAACW,MAAM,EAAC;IAAG,CAAC,CAAC;EAChE,CAAC,MAAM;IACL,OAAOH,QAAQ;EACjB;AACF,CAAC;AAED,OAAQ,MAAMI,MAAM,GAAG,MAAAA,CAAA,KAAY,CAEnC,CAAC;AAAA,IAAAN,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}