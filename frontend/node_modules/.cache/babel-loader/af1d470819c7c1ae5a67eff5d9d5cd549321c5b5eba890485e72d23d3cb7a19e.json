{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/workspace/react-practice/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","json","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","params","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/home/pedro/Documents/workspace/react-practice/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nconst EventDetailPage = () =>{\n    const params = useParams();\n\n\n    return (\n        <>\n            <EventItem />\n        </>\n    );\n}   \n\nexport default EventDetailPage;\n\nexport const loader = async ({request, params}  ) =>{\n\n    const id = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + id)\n\n    if(!response.ok){\n        throw json({message: 'Could not fetch details for selected event.'}, { status:500 })\n    }else{\n        return response;\n    }\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGT,SAAS,EAAE;EAG1B,oBACII,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACIN,OAAA,CAACF,SAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG,iBACd;AAEX,CAAC;AAAAN,EAAA,CATKD,eAAe;EAAA,QACFP,SAAS;AAAA;AAAAe,EAAA,GADtBR,eAAe;AAWrB,eAAeA,eAAe;AAE9B,OAAO,MAAMS,MAAM,GAAG,MAAAC,IAAA,IAA8B;EAAA,IAAvB;IAACC,OAAO;IAAET;EAAM,CAAC,GAAAQ,IAAA;EAE1C,MAAME,EAAE,GAAGV,MAAM,CAACW,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMtB,IAAI,CAAC;MAACuB,OAAO,EAAE;IAA6C,CAAC,EAAE;MAAEC,MAAM,EAAC;IAAI,CAAC,CAAC;EACxF,CAAC,MAAI;IACD,OAAOJ,QAAQ;EACnB;AACJ,CAAC;AAAA,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}