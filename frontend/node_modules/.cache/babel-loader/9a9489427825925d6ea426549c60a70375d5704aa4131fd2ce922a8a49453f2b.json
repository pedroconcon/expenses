{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/workspace/react-practice/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport ErrorPage from \"./components/Error\";\nimport EventsRootLayout from \"./components/EventsRoot\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport EventDetailPage, { loader as detailLoader } from \"./pages/EventDetail\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport HomePage from \"./pages/Home\";\nimport NewEventPage, { action as newEventAction } from \"./pages/NewEvent\";\nimport RootLayout from \"./pages/Root\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: ':eventId',\n      id: 'event-detail',\n      loader: detailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 38\n        }, this)\n      }, {\n        path: 'edit',\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 38\n        }, this)\n      }]\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this),\n      action: newEventAction\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","ErrorPage","EventsRootLayout","EditEventPage","EventDetailPage","loader","detailLoader","EventsPage","eventsLoader","HomePage","NewEventPage","action","newEventAction","RootLayout","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["/home/pedro/Documents/workspace/react-practice/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport ErrorPage from \"./components/Error\";\nimport EventsRootLayout from \"./components/EventsRoot\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport EventDetailPage, {loader as detailLoader} from \"./pages/EventDetail\";\nimport EventsPage, { loader as eventsLoader} from \"./pages/Events\";\nimport HomePage from \"./pages/Home\";\nimport NewEventPage,{ action as newEventAction} from \"./pages/NewEvent\";\nimport RootLayout from \"./pages/Root\";\n\nconst router = createBrowserRouter([\n  { \n    path:'/',\n    element: <RootLayout/>,\n    errorElement: <ErrorPage/>,\n    children:[\n      { index: true, element: <HomePage/>},\n      { path:\"events\",\n        element: <EventsRootLayout/>,\n        children:[\n          { index:true, \n            element: <EventsPage/>,\n            loader: eventsLoader,\n          },\n          {\n            path:':eventId',\n            id:'event-detail',\n            loader:detailLoader,\n            children:[\n              { index:true ,element: <EventDetailPage/>},\n              { path:'edit',element: <EditEventPage/>},\n            ]\n          },          \n          { path:'new',\n            element: <NewEventPage/>,\n            action: newEventAction\n          },          \n        ]\n      },\n    ]\n  },\n])\n\nfunction App() {\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,eAAe,IAAGC,MAAM,IAAIC,YAAY,QAAO,qBAAqB;AAC3E,OAAOC,UAAU,IAAIF,MAAM,IAAIG,YAAY,QAAO,gBAAgB;AAClE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,YAAY,IAAGC,MAAM,IAAIC,cAAc,QAAO,kBAAkB;AACvE,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGjB,mBAAmB,CAAC,CACjC;EACEkB,IAAI,EAAC,GAAG;EACRC,OAAO,eAAEH,OAAA,CAACF,UAAU;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;EACtBC,YAAY,eAAER,OAAA,CAACd,SAAS;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;EAC1BE,QAAQ,EAAC,CACP;IAAEC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACN,QAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,CAAC,EACpC;IAAEL,IAAI,EAAC,QAAQ;IACbC,OAAO,eAAEH,OAAA,CAACb,gBAAgB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;IAC5BE,QAAQ,EAAC,CACP;MAAEC,KAAK,EAAC,IAAI;MACVP,OAAO,eAAEH,OAAA,CAACR,UAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;MACtBjB,MAAM,EAAEG;IACV,CAAC,EACD;MACES,IAAI,EAAC,UAAU;MACfS,EAAE,EAAC,cAAc;MACjBrB,MAAM,EAACC,YAAY;MACnBkB,QAAQ,EAAC,CACP;QAAEC,KAAK,EAAC,IAAI;QAAEP,OAAO,eAAEH,OAAA,CAACX,eAAe;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE,CAAC,EAC1C;QAAEL,IAAI,EAAC,MAAM;QAACC,OAAO,eAAEH,OAAA,CAACZ,aAAa;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE,CAAC;IAE5C,CAAC,EACD;MAAEL,IAAI,EAAC,KAAK;MACVC,OAAO,eAAEH,OAAA,CAACL,YAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;MACxBX,MAAM,EAAEC;IACV,CAAC;EAEL,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASe,GAAGA,CAAA,EAAG;EACb,oBAAOZ,OAAA,CAACf,cAAc;IAACgB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAkB;AAC1D;AAACM,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}