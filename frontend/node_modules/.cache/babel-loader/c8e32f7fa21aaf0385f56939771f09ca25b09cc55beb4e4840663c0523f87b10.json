{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/workspace/react-practice/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport { json, redirect, useRouteLoaderData, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: event\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"SP42t2+YEs6IFgo/PrvLllNbJZk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nconst loadEvent = async id => {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n};\nconst loadEvents = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n};\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n};\nexport const action = async _ref2 => {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Suspense","json","redirect","useRouteLoaderData","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","_ref","request","params","eventId","action","_ref2","method","$RefreshReg$"],"sources":["/home/pedro/Documents/workspace/react-practice/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Suspense } from \"react\";\nimport { json, redirect, useRouteLoaderData, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\n\nconst EventDetailPage = () =>{\n    const {event,events} = useRouteLoaderData('event-detail');\n    \n    return (\n    <>  \n        <Suspense fallback={<p style={{textAlign:'center'}}></p>}>\n            <Await>\n                {loadedEvent => <EventItem  event={event}/>}\n            </Await>\n        </Suspense>\n        <Suspense fallback={<p style={{textAlign:'center'}}></p>}>\n            <Await>\n                {loadedEvents => <EventsList events={loadedEvents}/>}\n            </Await>                \n        </Suspense>\n    </>\n    );\n}   \n\nexport default EventDetailPage;\n\nconst loadEvent = async (id) => {\n    \n    const response = await fetch('http://localhost:8080/events/' + id)\n\n    if(!response.ok){\n        throw json({message: 'Could not fetch details for selected event.'}, { status:500 })\n    }else{\n        const resData = await response.json();\n        return resData.event;\n    }\n}\n\nconst loadEvents = async () => {\n    const response = await fetch('http://localhost:8080/events');\n  \n    if (!response.ok) {\n      throw json(\n        { message: 'Could not fetch events.' },\n        {\n          status: 500,\n        }\n      );\n    } else {\n      const resData = await response.json();\n      return resData.events;\n    }\n}\n\nexport const loader = async ({request, params}  ) =>{\n    const id = params.eventId;\n\n    return defer({\n        event:loadEvent(id),\n        events:loadEvents()\n    })\n}\n\nexport const action = async ({params, request}) =>{\n    const eventId = params.eventId;\n    \n    const response = await fetch('http://localhost:8080/events/' + eventId,{\n        method: request.method,\n    })\n    \n\n    if(!response.ok){\n        throw json({message: 'Could not delete event.'}, { status:500 })\n    }\n\n    return redirect('/events')\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}