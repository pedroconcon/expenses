{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/workspace/react-practice/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","json","useLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/home/pedro/Documents/workspace/react-practice/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams, json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nconst EventDetailPage = () =>{\n    const data = useLoaderData();\n    \n    return (\n        <>\n            <EventItem  event={data.event}/>\n        </>\n    );\n}   \n\nexport default EventDetailPage;\n\nexport const loader = async ({request, params}  ) =>{\n\n    const id = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + id)\n\n    if(!response.ok){\n        throw json({message: 'Could not fetch details for selected event.'}, { status:500 })\n    }else{\n        return response;\n    }\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACjE,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGR,aAAa,EAAE;EAE5B,oBACIG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACIN,OAAA,CAACF,SAAS;MAAES,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,iBACjC;AAEX,CAAC;AAAAP,EAAA,CARKD,eAAe;EAAA,QACJN,aAAa;AAAA;AAAAe,EAAA,GADxBT,eAAe;AAUrB,eAAeA,eAAe;AAE9B,OAAO,MAAMU,MAAM,GAAG,MAAAC,IAAA,IAA8B;EAAA,IAAvB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAE1C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMzB,IAAI,CAAC;MAAC0B,OAAO,EAAE;IAA6C,CAAC,EAAE;MAAEC,MAAM,EAAC;IAAI,CAAC,CAAC;EACxF,CAAC,MAAI;IACD,OAAOJ,QAAQ;EACnB;AACJ,CAAC;AAAA,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}